{
  "version": 3,
  "sources": ["../../three/examples/jsm/nodes/display/ColorAdjustmentNode.js"],
  "sourcesContent": ["import TempNode from '../core/TempNode.js';\r\nimport { dot, mix } from '../math/MathNode.js';\r\nimport { add } from '../math/OperatorNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, tslFn, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\r\n\r\nconst saturationNode = tslFn( ( { color, adjustment } ) => {\r\n\r\n\treturn adjustment.mix( luminance( color.rgb ), color.rgb );\r\n\r\n} );\r\n\r\nconst vibranceNode = tslFn( ( { color, adjustment } ) => {\r\n\r\n\tconst average = add( color.r, color.g, color.b ).div( 3.0 );\r\n\r\n\tconst mx = color.r.max( color.g.max( color.b ) );\r\n\tconst amt = mx.sub( average ).mul( adjustment ).mul( - 3.0 );\r\n\r\n\treturn mix( color.rgb, mx, amt );\r\n\r\n} );\r\n\r\nconst hueNode = tslFn( ( { color, adjustment } ) => {\r\n\r\n\tconst k = vec3( 0.57735, 0.57735, 0.57735 );\r\n\r\n\tconst cosAngle = adjustment.cos();\r\n\r\n\treturn vec3( color.rgb.mul( cosAngle ).add( k.cross( color.rgb ).mul( adjustment.sin() ).add( k.mul( dot( k, color.rgb ).mul( cosAngle.oneMinus() ) ) ) ) );\r\n\r\n} );\r\n\r\nclass ColorAdjustmentNode extends TempNode {\r\n\r\n\tconstructor( method, colorNode, adjustmentNode = float( 1 ) ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.method = method;\r\n\r\n\t\tthis.colorNode = colorNode;\r\n\t\tthis.adjustmentNode = adjustmentNode;\r\n\r\n\t}\r\n\r\n\tsetup() {\r\n\r\n\t\tconst { method, colorNode, adjustmentNode } = this;\r\n\r\n\t\tconst callParams = { color: colorNode, adjustment: adjustmentNode };\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( method === ColorAdjustmentNode.SATURATION ) {\r\n\r\n\t\t\toutputNode = saturationNode( callParams );\r\n\r\n\t\t} else if ( method === ColorAdjustmentNode.VIBRANCE ) {\r\n\r\n\t\t\toutputNode = vibranceNode( callParams );\r\n\r\n\t\t} else if ( method === ColorAdjustmentNode.HUE ) {\r\n\r\n\t\t\toutputNode = hueNode( callParams );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( `${ this.type }: Method \"${ this.method }\" not supported!` );\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode;\r\n\r\n\t}\r\n\r\n}\r\n\r\nColorAdjustmentNode.SATURATION = 'saturation';\r\nColorAdjustmentNode.VIBRANCE = 'vibrance';\r\nColorAdjustmentNode.HUE = 'hue';\r\n\r\nexport default ColorAdjustmentNode;\r\n\r\nexport const saturation = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.SATURATION );\r\nexport const vibrance = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.VIBRANCE );\r\nexport const hue = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.HUE );\r\n\r\nexport const lumaCoeffs = vec3( 0.2125, 0.7154, 0.0721 );\r\nexport const luminance = ( color, luma = lumaCoeffs ) => dot( color, luma );\r\n\r\nexport const threshold = ( color, threshold ) => mix( vec3( 0.0 ), color, luminance( color ).sub( threshold ).max( 0 ) );\r\n\r\naddNodeElement( 'saturation', saturation );\r\naddNodeElement( 'vibrance', vibrance );\r\naddNodeElement( 'hue', hue );\r\naddNodeElement( 'threshold', threshold );\r\n\r\naddNodeClass( 'ColorAdjustmentNode', ColorAdjustmentNode );\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAMA,IAAM,iBAAiB,MAAO,CAAE,EAAE,OAAO,WAAW,MAAO;AAE1D,SAAO,WAAW,IAAK,UAAW,MAAM,GAAI,GAAG,MAAM,GAAI;AAE1D,CAAE;AAEF,IAAM,eAAe,MAAO,CAAE,EAAE,OAAO,WAAW,MAAO;AAExD,QAAM,UAAU,IAAK,MAAM,GAAG,MAAM,GAAG,MAAM,CAAE,EAAE,IAAK,CAAI;AAE1D,QAAM,KAAK,MAAM,EAAE,IAAK,MAAM,EAAE,IAAK,MAAM,CAAE,CAAE;AAC/C,QAAM,MAAM,GAAG,IAAK,OAAQ,EAAE,IAAK,UAAW,EAAE,IAAK,EAAM;AAE3D,SAAO,IAAK,MAAM,KAAK,IAAI,GAAI;AAEhC,CAAE;AAEF,IAAM,UAAU,MAAO,CAAE,EAAE,OAAO,WAAW,MAAO;AAEnD,QAAM,IAAI,KAAM,SAAS,SAAS,OAAQ;AAE1C,QAAM,WAAW,WAAW,IAAI;AAEhC,SAAO,KAAM,MAAM,IAAI,IAAK,QAAS,EAAE,IAAK,EAAE,MAAO,MAAM,GAAI,EAAE,IAAK,WAAW,IAAI,CAAE,EAAE,IAAK,EAAE,IAAK,IAAK,GAAG,MAAM,GAAI,EAAE,IAAK,SAAS,SAAS,CAAE,CAAE,CAAE,CAAE,CAAE;AAE3J,CAAE;AAEF,IAAM,sBAAN,MAAM,6BAA4B,iBAAS;AAAA,EAE1C,YAAa,QAAQ,WAAW,iBAAiB,MAAO,CAAE,GAAI;AAE7D,UAAO,MAAO;AAEd,SAAK,SAAS;AAEd,SAAK,YAAY;AACjB,SAAK,iBAAiB;AAAA,EAEvB;AAAA,EAEA,QAAQ;AAEP,UAAM,EAAE,QAAQ,WAAW,eAAe,IAAI;AAE9C,UAAM,aAAa,EAAE,OAAO,WAAW,YAAY,eAAe;AAElE,QAAI,aAAa;AAEjB,QAAK,WAAW,qBAAoB,YAAa;AAEhD,mBAAa,eAAgB,UAAW;AAAA,IAEzC,WAAY,WAAW,qBAAoB,UAAW;AAErD,mBAAa,aAAc,UAAW;AAAA,IAEvC,WAAY,WAAW,qBAAoB,KAAM;AAEhD,mBAAa,QAAS,UAAW;AAAA,IAElC,OAAO;AAEN,cAAQ,MAAO,GAAI,KAAK,IAAK,aAAc,KAAK,MAAO,kBAAmB;AAAA,IAE3E;AAEA,WAAO;AAAA,EAER;AAED;AAEA,oBAAoB,aAAa;AACjC,oBAAoB,WAAW;AAC/B,oBAAoB,MAAM;AAE1B,IAAO,8BAAQ;AAER,IAAM,aAAa,UAAW,qBAAqB,oBAAoB,UAAW;AAClF,IAAM,WAAW,UAAW,qBAAqB,oBAAoB,QAAS;AAC9E,IAAM,MAAM,UAAW,qBAAqB,oBAAoB,GAAI;AAEpE,IAAM,aAAa,KAAM,QAAQ,QAAQ,MAAO;AAChD,IAAM,YAAY,CAAE,OAAO,OAAO,eAAgB,IAAK,OAAO,IAAK;AAEnE,IAAM,YAAY,CAAE,OAAOA,eAAe,IAAK,KAAM,CAAI,GAAG,OAAO,UAAW,KAAM,EAAE,IAAKA,UAAU,EAAE,IAAK,CAAE,CAAE;AAEvH,eAAgB,cAAc,UAAW;AACzC,eAAgB,YAAY,QAAS;AACrC,eAAgB,OAAO,GAAI;AAC3B,eAAgB,aAAa,SAAU;AAEvC,aAAc,uBAAuB,mBAAoB;",
  "names": ["threshold"]
}
